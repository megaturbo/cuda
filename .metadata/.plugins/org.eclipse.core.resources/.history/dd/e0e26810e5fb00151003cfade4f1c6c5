#include "Fractal.h"


using std::cout;
using std::endl;
/*----------------------------------------------------------------------*\
 |*			Declaration 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

/*--------------------------------------*\
 |*		Private			*|
 \*-------------------------------------*/

/*----------------------------------------------------------------------*\
 |*			Implementation 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/
Mandelbrot::Mandelbrot(uint n)
{
	this->n = n;

	this->t = 0;
	this->parallelPatern = ParallelPatern::OMP_MIXTE;

	cout << "\n[Mandelbrot] : OMP : nbThread = " << this->nbThread << endl; // protected dans super classe Animable
}

Mandelbrot::~Mandelbrot(void)
{

}

bool isDivergent(float zr, float zi)
{
	return sqrtf(zr * zr + zi * zi) > 2.0;
}


